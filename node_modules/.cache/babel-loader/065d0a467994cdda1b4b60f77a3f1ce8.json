{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Predmeti\\\\DWS\\\\Vjezbe\\\\trazim-cimera\\\\trazimcimera\\\\src\\\\views\\\\DodajOglas\\\\DodajOglas.js\";\nimport React, { useState } from 'react';\nimport ToolbarLayout from '../../components/ToolbarLayout/ToolbarLayout';\nimport classes from './DodajOglas.css';\nimport Footer from '../../components/Footer/Footer';\nimport AuthApi from '../../auth-api';\nimport Cookies from 'js-cookie';\nimport { useHistory } from 'react-router-dom';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst DodajOglas = props => {\n  const POST_MUTATION = gql`\n    mutation {\n      addPost(\n        postInfo: {\n          author: $id\n          post_type: $type\n          description: $description\n          address: $address\n          rent: $rent\n          num_of_roommates: $roomMates\n        }\n      ) {\n        post_id\n        description\n        address\n        rent\n        num_of_roommates\n        author {\n          user_id\n          username\n          name\n          surname\n          city\n          address\n          email\n          bio\n          gender\n          date_of_birth\n          pr_picture_url\n          pref_roommate_num\n        }\n        post_type {\n          post_type_id\n        }\n      }\n    }\n  `;\n  const Auth = React.useContext(AuthApi);\n  const [address, setAddress] = useState('');\n  const [rent, setRent] = useState('');\n  const [roomMates, setRoomMates] = useState(0);\n  const [description, setDescription] = useState('');\n\n  const handleChangeAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeRent = event => {\n    setRent(parseInt(event.target.value));\n  };\n\n  const handleChangeRomMates = event => {\n    setRoomMates(parseInt(event.target.value));\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const [type, setType] = useState(1);\n  const user = Cookies.get('user');\n  const userObject = JSON.parse(user);\n  let {\n    id,\n    token\n  } = userObject;\n  id = parseInt(id);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (address === '') {\n      alert('Unesite adresu!');\n    } else if (roomMates === '') {\n      alert('Unesite broj cimera!');\n    } else if (rent === '') {\n      alert('Unesite cijenu!');\n    } else if (description === '') {\n      alert('Unesite opis!');\n    } else {\n      const requestBody = {\n        query: `\n        mutation addPost($postInfo: PostInfo) {\n            addPost(postInfo: $postInfo) {\n                post_id\n                description\n                address\n                rent\n                num_of_roommates\n                author {\n                    user_id\n                    username\n                    name\n                    surname\n                    city\n                    address\n                    email\n                    bio\n                    gender\n                    date_of_birth\n                    pr_picture_url\n                    pref_roommate_num\n                }\n                post_type {\n                    post_type_id\n                }\n            }\n        }\n        `,\n        variables: {\n          postInfo: {\n            author: id,\n            post_type: type,\n            address,\n            rent,\n            description,\n            num_of_roommates: roomMates\n          }\n        }\n      };\n      const request = {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"authorization\": token\n        }\n      };\n      console.log(request);\n      fetch('http://localhost:4000', request).then(res => {\n        console.log(res);\n\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Greška!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n        /*if(resData.data.login !== null) {\r\n                  setTimeout(function () {\r\n                      alert(\"Uspješno kreiran novi oglas!\");\r\n                  }, 1);\r\n              } else {\r\n                  alert(\"Unesite obavezna polja!\");\r\n              }*/\n      }).catch(err => {\n        console.log('Error ' + err.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ToolbarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DodajOglas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Objavi svoj oglas!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"Ako \\u017Eelite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Po\\u0161aljite nam poruku\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Adresa\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeAddress(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Broj cimera\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRomMates(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Cijena\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRent(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Va\\u0161 oglas\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"7\",\n    cols: \"50\",\n    onChange: event => {\n      handleChangeDescription(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    onClick: event => {\n      handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"OBJAVI\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DodajOglas;\n/* Napraviti prvo dodavanje bez tipa oglasa */\n\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n\n/* Napraviti dodavanje kontakta u tabelu */\n\n/* Popraviti warninge */","map":{"version":3,"sources":["C:/Personal/Predmeti/DWS/Vjezbe/trazim-cimera/trazimcimera/src/views/DodajOglas/DodajOglas.js"],"names":["React","useState","ToolbarLayout","classes","Footer","AuthApi","Cookies","useHistory","Mutation","gql","DodajOglas","props","POST_MUTATION","Auth","useContext","address","setAddress","rent","setRent","roomMates","setRoomMates","description","setDescription","handleChangeAddress","event","target","value","handleChangeRent","parseInt","handleChangeRomMates","handleChangeDescription","type","setType","user","get","userObject","JSON","parse","id","token","handleSubmit","preventDefault","alert","requestBody","query","variables","postInfo","author","post_type","num_of_roommates","request","method","body","stringify","headers","console","log","fetch","then","res","status","Error","json","resData","catch","err","message","Forma","Button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ToolbarLayout from '../../components/ToolbarLayout/ToolbarLayout';\r\nimport classes from './DodajOglas.css';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport AuthApi from '../../auth-api';\r\nimport Cookies from 'js-cookie';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nconst DodajOglas = (props) => {\r\n  const POST_MUTATION = gql`\r\n    mutation {\r\n      addPost(\r\n        postInfo: {\r\n          author: $id\r\n          post_type: $type\r\n          description: $description\r\n          address: $address\r\n          rent: $rent\r\n          num_of_roommates: $roomMates\r\n        }\r\n      ) {\r\n        post_id\r\n        description\r\n        address\r\n        rent\r\n        num_of_roommates\r\n        author {\r\n          user_id\r\n          username\r\n          name\r\n          surname\r\n          city\r\n          address\r\n          email\r\n          bio\r\n          gender\r\n          date_of_birth\r\n          pr_picture_url\r\n          pref_roommate_num\r\n        }\r\n        post_type {\r\n          post_type_id\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const Auth = React.useContext(AuthApi);\r\n\r\n  const [address, setAddress] = useState('');\r\n  const [rent, setRent] = useState('');\r\n  const [roomMates, setRoomMates] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleChangeAddress = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n\r\n  const handleChangeRent = (event) => {\r\n    setRent(parseInt(event.target.value));\r\n  };\r\n  const handleChangeRomMates = (event) => {\r\n    setRoomMates(parseInt(event.target.value));\r\n  };\r\n  const handleChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const [type, setType] = useState(1);\r\n  const user = Cookies.get('user');\r\n  const userObject = JSON.parse(user);\r\n\r\n  let { id, token } = userObject;\r\n  id = parseInt(id);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (address === '') {\r\n      alert('Unesite adresu!');\r\n    } else if (roomMates === '') {\r\n      alert('Unesite broj cimera!');\r\n    } else if (rent === '') {\r\n      alert('Unesite cijenu!');\r\n    } else if (description === '') {\r\n      alert('Unesite opis!');\r\n    } else {\r\n      const requestBody = {\r\n        query: `\r\n        mutation addPost($postInfo: PostInfo) {\r\n            addPost(postInfo: $postInfo) {\r\n                post_id\r\n                description\r\n                address\r\n                rent\r\n                num_of_roommates\r\n                author {\r\n                    user_id\r\n                    username\r\n                    name\r\n                    surname\r\n                    city\r\n                    address\r\n                    email\r\n                    bio\r\n                    gender\r\n                    date_of_birth\r\n                    pr_picture_url\r\n                    pref_roommate_num\r\n                }\r\n                post_type {\r\n                    post_type_id\r\n                }\r\n            }\r\n        }\r\n        `,\r\n        variables: {\r\n          postInfo: {\r\n            author: id,\r\n            post_type: type,\r\n            address,\r\n            rent,\r\n            description,\r\n            num_of_roommates: roomMates,\r\n          },\r\n        },\r\n      };\r\n\r\n      const request = {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: { \"authorization\": token },\r\n      };\r\n\r\n      console.log(request);\r\n\r\n      fetch('http://localhost:4000', request)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.status !== 200 && res.status !== 201) {\r\n            throw new Error('Greška!');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((resData) => {\r\n          console.log(resData);\r\n          /*if(resData.data.login !== null) {\r\n                    setTimeout(function () {\r\n                        alert(\"Uspješno kreiran novi oglas!\");\r\n                    }, 1);\r\n                } else {\r\n                    alert(\"Unesite obavezna polja!\");\r\n                }*/\r\n        })\r\n        .catch((err) => {\r\n          console.log('Error ' + err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToolbarLayout>\r\n      <div className={classes.DodajOglas}>\r\n        <div className={classes.Forma}>\r\n          <h1>Objavi svoj oglas!</h1>\r\n          <p>\r\n            Ako želite da objavite svoj oglas i ponudu za cimere, molim Vas\r\n            ispunite obrazac ispod.\r\n          </p>\r\n          <h4>Pošaljite nam poruku</h4>\r\n\r\n          <label>\r\n            <strong>Adresa</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeAddress(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Broj cimera</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeRomMates(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Cijena</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeRent(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Vaš oglas</strong> *obavezno*\r\n          </label>\r\n          <textarea\r\n            rows='7'\r\n            cols='50'\r\n            onChange={(event) => {\r\n              handleChangeDescription(event);\r\n            }}\r\n          />\r\n          <button\r\n            className={classes.Button}\r\n            onClick={(event) => {\r\n              handleSubmit(event);\r\n            }}\r\n          >\r\n            OBJAVI\r\n          </button>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </ToolbarLayout>\r\n  );\r\n};\r\n\r\nexport default DodajOglas;\r\n\r\n/* Napraviti prvo dodavanje bez tipa oglasa */\r\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\r\n/* Napraviti dodavanje oglasa i radio buttone u formi */\r\n/* Napraviti dodavanje kontakta u tabelu */\r\n/* Popraviti warninge */\r\n"]},"metadata":{},"sourceType":"module"}