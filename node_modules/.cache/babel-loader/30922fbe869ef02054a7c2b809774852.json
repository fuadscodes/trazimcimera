{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Predmeti\\\\DWS\\\\Vjezbe\\\\trazim-cimera\\\\trazimcimera\\\\src\\\\views\\\\DodajOglas\\\\DodajOglas.js\";\nimport React, { useState } from 'react';\nimport ToolbarLayout from '../../components/ToolbarLayout/ToolbarLayout';\nimport classes from './DodajOglas.css';\nimport Footer from '../../components/Footer/Footer';\nimport AuthApi from '../../auth-api';\nimport Cookies from 'js-cookie';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { useHistory } from \"react-router-dom\";\nconst addPostMutation = gql`\n  mutation addPost($postInfo: PostInfo) {\n    addPost(postInfo: $postInfo) {\n      post_id\n      description\n      address\n      rent\n      num_of_roommates\n      author {\n        user_id\n        username\n        name\n        surname\n        city\n        address\n        email\n        bio\n        gender\n        date_of_birth\n        pr_picture_url\n        pref_roommate_num\n      }\n      post_type {\n        post_type_id\n      }\n    }\n  }\n`;\n\nconst addPostMutationOptions = ({\n  variables,\n  context\n}) => ({\n  variables: { ...variables\n  },\n  context: { ...context\n  }\n});\n\nconst DodajOglas = props => {\n  const onCompleted = data => {\n    console.log('Objava dodana uspješno!');\n    console.log(data);\n  };\n\n  const onError = err => {\n    console.log('Došlo je do greške. Radimo na tome!');\n    console.log(err);\n  };\n\n  const [submitPost] = useMutation(addPostMutation, {\n    onCompleted,\n    onError\n  });\n  const history = useHistroy();\n  const Auth = React.useContext(AuthApi);\n  const [address, setAddress] = useState('');\n  const [rent, setRent] = useState('');\n  const [roomMates, setRoomMates] = useState(0);\n  const [description, setDescription] = useState('');\n\n  const handleChangeAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeRent = event => {\n    setRent(parseInt(event.target.value));\n  };\n\n  const handleChangeRomMates = event => {\n    setRoomMates(parseInt(event.target.value));\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const [type, setType] = useState(1);\n  const user = Cookies.get('user');\n  const userObject = JSON.parse(user);\n  let {\n    id,\n    token\n  } = userObject;\n  id = parseInt(id);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (address === '') {\n      alert('Unesite adresu!');\n    } else if (roomMates === '') {\n      alert('Unesite broj cimera!');\n    } else if (rent === '') {\n      alert('Unesite cijenu!');\n    } else if (description === '') {\n      alert('Unesite opis!');\n    } else {\n      const postInfo = {\n        author: id,\n        post_type: type,\n        address,\n        rent,\n        description,\n        num_of_roommates: roomMates\n      };\n      const opts = {\n        variables: {\n          postInfo\n        },\n        context: {\n          headers: {\n            authorization: token\n          }\n        }\n      };\n      history.push('/oglasi');\n      submitPost(addPostMutationOptions(opts));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ToolbarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DodajOglas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Objavi svoj oglas!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Ako \\u017Eelite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Po\\u0161aljite nam poruku\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Adresa\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeAddress(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Broj cimera\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRomMates(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Cijena\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRent(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Va\\u0161 oglas\"), \" *obavezno*\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"7\",\n    cols: \"50\",\n    onChange: event => {\n      handleChangeDescription(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    onClick: event => {\n      handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"OBJAVI\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DodajOglas;\n/* Napraviti prvo dodavanje bez tipa oglasa */\n\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n\n/* Napraviti dodavanje kontakta u tabelu */\n\n/* Popraviti warninge */","map":{"version":3,"sources":["C:/Personal/Predmeti/DWS/Vjezbe/trazim-cimera/trazimcimera/src/views/DodajOglas/DodajOglas.js"],"names":["React","useState","ToolbarLayout","classes","Footer","AuthApi","Cookies","useMutation","gql","useHistory","addPostMutation","addPostMutationOptions","variables","context","DodajOglas","props","onCompleted","data","console","log","onError","err","submitPost","history","useHistroy","Auth","useContext","address","setAddress","rent","setRent","roomMates","setRoomMates","description","setDescription","handleChangeAddress","event","target","value","handleChangeRent","parseInt","handleChangeRomMates","handleChangeDescription","type","setType","user","get","userObject","JSON","parse","id","token","handleSubmit","preventDefault","alert","postInfo","author","post_type","num_of_roommates","opts","headers","authorization","push","Forma","Button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ToolbarLayout from '../../components/ToolbarLayout/ToolbarLayout';\r\nimport classes from './DodajOglas.css';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport AuthApi from '../../auth-api';\r\nimport Cookies from 'js-cookie';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst addPostMutation = gql`\r\n  mutation addPost($postInfo: PostInfo) {\r\n    addPost(postInfo: $postInfo) {\r\n      post_id\r\n      description\r\n      address\r\n      rent\r\n      num_of_roommates\r\n      author {\r\n        user_id\r\n        username\r\n        name\r\n        surname\r\n        city\r\n        address\r\n        email\r\n        bio\r\n        gender\r\n        date_of_birth\r\n        pr_picture_url\r\n        pref_roommate_num\r\n      }\r\n      post_type {\r\n        post_type_id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst addPostMutationOptions = ({ variables, context }) => ({\r\n  variables: { ...variables },\r\n  context: { ...context },\r\n});\r\n\r\nconst DodajOglas = (props) => {\r\n  const onCompleted = (data) => {\r\n    console.log('Objava dodana uspješno!');\r\n    console.log(data);\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log('Došlo je do greške. Radimo na tome!');\r\n    console.log(err);\r\n  };\r\n\r\n  const [submitPost] = useMutation(addPostMutation, {\r\n    onCompleted,\r\n    onError,\r\n  });\r\n\r\n  const history = useHistroy();\r\n  const Auth = React.useContext(AuthApi);\r\n\r\n  const [address, setAddress] = useState('');\r\n  const [rent, setRent] = useState('');\r\n  const [roomMates, setRoomMates] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleChangeAddress = (event) => {\r\n    setAddress(event.target.value);\r\n  };\r\n\r\n  const handleChangeRent = (event) => {\r\n    setRent(parseInt(event.target.value));\r\n  };\r\n  const handleChangeRomMates = (event) => {\r\n    setRoomMates(parseInt(event.target.value));\r\n  };\r\n  const handleChangeDescription = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const [type, setType] = useState(1);\r\n  const user = Cookies.get('user');\r\n  const userObject = JSON.parse(user);\r\n\r\n  let { id, token } = userObject;\r\n  id = parseInt(id);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (address === '') {\r\n      alert('Unesite adresu!');\r\n    } else if (roomMates === '') {\r\n      alert('Unesite broj cimera!');\r\n    } else if (rent === '') {\r\n      alert('Unesite cijenu!');\r\n    } else if (description === '') {\r\n      alert('Unesite opis!');\r\n    } else {\r\n      const postInfo = {\r\n        author: id,\r\n        post_type: type,\r\n        address,\r\n        rent,\r\n        description,\r\n        num_of_roommates: roomMates,\r\n      };\r\n\r\n      const opts = {\r\n        variables: { postInfo },\r\n        context: { headers: { authorization: token } },\r\n      };\r\n      history.push('/oglasi');\r\n\r\n      submitPost(addPostMutationOptions(opts));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToolbarLayout>\r\n      <div className={classes.DodajOglas}>\r\n        <div className={classes.Forma}>\r\n          <h1>Objavi svoj oglas!</h1>\r\n          <p>\r\n            Ako želite da objavite svoj oglas i ponudu za cimere, molim Vas\r\n            ispunite obrazac ispod.\r\n          </p>\r\n          <h4>Pošaljite nam poruku</h4>\r\n\r\n          <label>\r\n            <strong>Adresa</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeAddress(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Broj cimera</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeRomMates(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Cijena</strong> *obavezno*\r\n          </label>\r\n          <input\r\n            type='text'\r\n            onChange={(event) => {\r\n              handleChangeRent(event);\r\n            }}\r\n          />\r\n          <label>\r\n            <strong>Vaš oglas</strong> *obavezno*\r\n          </label>\r\n          <textarea\r\n            rows='7'\r\n            cols='50'\r\n            onChange={(event) => {\r\n              handleChangeDescription(event);\r\n            }}\r\n          />\r\n          <button\r\n            className={classes.Button}\r\n            onClick={(event) => {\r\n              handleSubmit(event);\r\n            }}\r\n          >\r\n            OBJAVI\r\n          </button>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </ToolbarLayout>\r\n  );\r\n};\r\n\r\nexport default DodajOglas;\r\n\r\n/* Napraviti prvo dodavanje bez tipa oglasa */\r\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\r\n/* Napraviti dodavanje oglasa i radio buttone u formi */\r\n/* Napraviti dodavanje kontakta u tabelu */\r\n/* Popraviti warninge */\r\n"]},"metadata":{},"sourceType":"module"}