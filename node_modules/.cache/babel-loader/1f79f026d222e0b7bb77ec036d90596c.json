{"ast":null,"code":"var _jsxFileName = \"/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js\";\nimport React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\n\nconst DodajOglas = props => {\n  const POST_MUTATION = gql`\n        mutation PostMutation($description: String!, $url: String!) {\n            post(description: $description, url: $url) {\n            id\n            createdAt\n            url\n            description\n            }\n        }\n        `;\n  const Auth = React.useContext(AuthApi);\n  const [address, setAddress] = useState(\"\");\n  const [rent, setRent] = useState(\"\");\n  const [roomMates, setRoomMates] = useState(0);\n  const [description, setDescription] = useState(\"\");\n\n  const handleChangeAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeRent = event => {\n    setRent(event.target.value);\n  };\n\n  const handleChangeRomMates = event => {\n    setRoomMates(event.target.value);\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const [type, setType] = useState(1);\n  const user = Cookies.get(\"user\");\n  const id = user.toString().split('\"')[7];\n  const token = user.toString().split('\"')[3];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (address === \"\") {\n      alert(\"Unesite adresu!\");\n    } else if (roomMates === \"\") {\n      alert(\"Unesite broj cimera!\");\n    } else if (rent === \"\") {\n      alert(\"Unesite cijenu!\");\n    } else if (description === \"\") {\n      alert(\"Unesite opis!\");\n    } else {\n      const requestBody = {\n        query: `\n                mutation {\n                    addPost(postInfo: {\n                    author: ${parseInt(id)},\n                    post_type: ${parseInt(type)},\n                    description: ${description}\",\n                    address: ${address},\n                    rent: ${parseInt(rent)},\n                    num_of_roommates: ${parseInt(roomMates)},\n                    }) {\n                    post_id\n                    description\n                    address\n                    rent\n                    num_of_roommates\n                    author {\n                        user_id\n                        username\n                        name\n                        surname\n                        city\n                        address\n                        email\n                        bio\n                        gender\n                        date_of_birth\n                        pr_picture_url\n                        pref_roommate_num\n                    }\n                    post_type {\n                        post_type_id\n                    }\n                    }\n                }\n                `\n      };\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ToolbarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DodajOglas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Objavi svoj oglas!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Ako \\u017Eelite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Po\\u0161aljite nam poruku\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }\n  }, \"Adresa\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeAddress(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 28\n    }\n  }, \"Broj cimera\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRomMates(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 28\n    }\n  }, \"Cijena\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRent(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }\n  }, \"Va\\u0161a oglas\"), \" (required)\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"7\",\n    cols: \"50\",\n    onChange: event => {\n      handleChangeDescription(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    onClick: event => {\n      handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"OBJAVI\"), /*#__PURE__*/React.createElement(Mutation, {\n    mutation: POST_MUTATION,\n    variables: {\n      description,\n      url\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, postMutation => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postMutation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 42\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default DodajOglas;\n/* Napraviti prvo dodavanje bez tipa oglasa */\n\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n\n/* Napraviti dodavanje kontakta u tabelu */\n\n/* Popraviti warninge */","map":{"version":3,"sources":["/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js"],"names":["React","useState","ToolbarLayout","classes","Footer","AuthApi","Cookies","useHistory","DodajOglas","props","POST_MUTATION","gql","Auth","useContext","address","setAddress","rent","setRent","roomMates","setRoomMates","description","setDescription","handleChangeAddress","event","target","value","handleChangeRent","handleChangeRomMates","handleChangeDescription","type","setType","user","get","id","toString","split","token","handleSubmit","preventDefault","alert","requestBody","query","parseInt","Forma","Button","url","postMutation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst DodajOglas = (props) => {\n\n    const POST_MUTATION = gql`\n        mutation PostMutation($description: String!, $url: String!) {\n            post(description: $description, url: $url) {\n            id\n            createdAt\n            url\n            description\n            }\n        }\n        `\n\n    const Auth = React.useContext(AuthApi);\n\n    const [address, setAddress] = useState(\"\");\n    const [rent, setRent] = useState(\"\");\n    const [roomMates, setRoomMates] = useState(0);\n    const [description, setDescription] = useState(\"\");\n\n    const handleChangeAddress = (event) => {\n        setAddress(event.target.value);\n    }\n\n    const handleChangeRent = (event) => {\n        setRent(event.target.value);\n    }\n    const handleChangeRomMates = (event) => {\n        setRoomMates(event.target.value);\n    }\n    const handleChangeDescription = (event) => {\n        setDescription(event.target.value);\n    }\n\n    const [type, setType] = useState(1);\n    const user = Cookies.get(\"user\");\n    const id = user.toString().split('\"')[7];\n    const token = user.toString().split('\"')[3];\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(address === \"\") {\n            alert(\"Unesite adresu!\")\n        } else if (roomMates === \"\") {\n            alert(\"Unesite broj cimera!\")\n        } else if (rent === \"\") {\n            alert(\"Unesite cijenu!\")\n        } else if (description === \"\") {\n            alert(\"Unesite opis!\");\n        } else {\n            const requestBody = {\n                query: `\n                mutation {\n                    addPost(postInfo: {\n                    author: ${parseInt(id)},\n                    post_type: ${parseInt(type)},\n                    description: ${description}\",\n                    address: ${address},\n                    rent: ${parseInt(rent)},\n                    num_of_roommates: ${parseInt(roomMates)},\n                    }) {\n                    post_id\n                    description\n                    address\n                    rent\n                    num_of_roommates\n                    author {\n                        user_id\n                        username\n                        name\n                        surname\n                        city\n                        address\n                        email\n                        bio\n                        gender\n                        date_of_birth\n                        pr_picture_url\n                        pref_roommate_num\n                    }\n                    post_type {\n                        post_type_id\n                    }\n                    }\n                }\n                `\n            };\n            \n        }\n    }\n    return (\n        <ToolbarLayout>\n            <div className={classes.DodajOglas}>\n                \n                <div className={classes.Forma}>\n                    <h1>Objavi svoj oglas!</h1>\n                    <p>Ako želite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.</p>\n                    <h4>Pošaljite nam poruku</h4>\n                    \n                    <label><strong>Adresa</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeAddress(event)}}/>\n                    <label><strong>Broj cimera</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRomMates(event)}}/>\n                    <label><strong>Cijena</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRent(event)}}/>\n                    <label><strong>Vaša oglas</strong> (required)</label>\n                    <textarea rows=\"7\" cols=\"50\" onChange={(event) => {handleChangeDescription(event)}}/>\n                    <button className={classes.Button} onClick={event => {handleSubmit(event)}}>OBJAVI</button>\n                    <Mutation mutation={POST_MUTATION} variables={{ description, url }}>\n                        {postMutation => <button onClick={postMutation}>Submit</button>}\n                    </Mutation>\n                </div>\n                <Footer/>\n            </div>\n\n        </ToolbarLayout>\n    )\n}\n\nexport default DodajOglas;\n\n/* Napraviti prvo dodavanje bez tipa oglasa */\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n/* Napraviti dodavanje kontakta u tabelu */\n/* Popraviti warninge */\n"]},"metadata":{},"sourceType":"module"}