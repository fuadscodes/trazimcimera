{"ast":null,"code":"import React, { useRef, useContext, useEffect } from 'react';\nimport { isExtractableFile, extractFiles } from 'extract-files';\nimport deepEqual from 'dequal';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ClientContext = React.createContext();\nClientContext.displayName = 'ClientContext';\n\nvar isExtractableFileEnhanced = function isExtractableFileEnhanced(value) {\n  return isExtractableFile(value) || // Check if stream\n  // https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n  value !== null && typeof value === 'object' && typeof value.pipe === 'function';\n};\n\nvar GraphQLClient = /*#__PURE__*/function () {\n  function GraphQLClient(config) {\n    if (config === void 0) {\n      config = {};\n    } // validate config\n\n\n    if (!config.url) {\n      throw new Error('GraphQLClient: config.url is required');\n    }\n\n    if (config.fetch && typeof config.fetch !== 'function') {\n      throw new Error('GraphQLClient: config.fetch must be a function');\n    }\n\n    if (!config.fetch && !fetch) {\n      throw new Error('GraphQLClient: fetch must be polyfilled or passed in new GraphQLClient({ fetch })');\n    }\n\n    if (config.ssrMode && !config.cache) {\n      throw new Error('GraphQLClient: config.cache is required when in ssrMode');\n    }\n\n    this.cache = config.cache;\n    this.headers = config.headers || {};\n    this.ssrMode = config.ssrMode;\n    this.ssrPromises = [];\n    this.url = config.url;\n    this.fetch = config.fetch || fetch.bind();\n    this.fetchOptions = config.fetchOptions || {};\n    this.FormData = config.FormData || (typeof FormData !== 'undefined' ? FormData : undefined);\n    this.logErrors = config.logErrors !== undefined ? config.logErrors : true;\n    this.onError = config.onError;\n    this.useGETForQueries = config.useGETForQueries === true;\n    this.subscriptionClient = config.subscriptionClient;\n  }\n\n  var _proto = GraphQLClient.prototype;\n\n  _proto.setHeader = function setHeader(key, value) {\n    this.headers[key] = value;\n    return this;\n  };\n\n  _proto.setHeaders = function setHeaders(headers) {\n    this.headers = headers;\n    return this;\n  };\n\n  _proto.removeHeader = function removeHeader(key) {\n    delete this.headers[key];\n    return this;\n  }\n  /* eslint-disable no-console */\n  ;\n\n  _proto.logErrorResult = function logErrorResult(_ref) {\n    var result = _ref.result,\n        operation = _ref.operation;\n    console.error('GraphQL Hooks Error');\n    console.groupCollapsed('---> Full Error Details');\n    console.groupCollapsed('Operation:');\n    console.log(operation);\n    console.groupEnd();\n    var error = result.error;\n\n    if (error) {\n      if (error.fetchError) {\n        console.groupCollapsed('FETCH ERROR:');\n        console.log(error.fetchError);\n        console.groupEnd();\n      }\n\n      if (error.httpError) {\n        console.groupCollapsed('HTTP ERROR:');\n        console.log(error.httpError);\n        console.groupEnd();\n      }\n\n      if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n        console.groupCollapsed('GRAPHQL ERROR:');\n        error.graphQLErrors.forEach(function (err) {\n          return console.log(err);\n        });\n        console.groupEnd();\n      }\n    }\n\n    console.groupEnd();\n  }\n  /* eslint-enable no-console */\n  ;\n\n  _proto.generateResult = function generateResult(_ref2) {\n    var fetchError = _ref2.fetchError,\n        httpError = _ref2.httpError,\n        graphQLErrors = _ref2.graphQLErrors,\n        data = _ref2.data;\n    var errorFound = !!(graphQLErrors && graphQLErrors.length > 0 || fetchError || httpError);\n    return !errorFound ? {\n      data: data\n    } : {\n      data: data,\n      error: {\n        fetchError: fetchError,\n        httpError: httpError,\n        graphQLErrors: graphQLErrors\n      }\n    };\n  };\n\n  _proto.getCacheKey = function getCacheKey(operation, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var fetchOptions = _objectSpread2({}, this.fetchOptions, {}, options.fetchOptionsOverrides);\n\n    return {\n      operation: operation,\n      fetchOptions: fetchOptions\n    };\n  };\n\n  _proto.getCache = function getCache(cacheKey) {\n    var cacheHit = this.cache ? this.cache.get(cacheKey) : null;\n\n    if (cacheHit) {\n      return cacheHit;\n    }\n  };\n\n  _proto.saveCache = function saveCache(cacheKey, value) {\n    if (this.cache) {\n      this.cache.set(cacheKey, value);\n    }\n  } // Kudos to Jayden Seric (@jaydenseric) for this piece of code.\n  // See original source: https://github.com/jaydenseric/graphql-react/blob/82d576b5fe6664c4a01cd928d79f33ddc3f7bbfd/src/universal/graphqlFetchOptions.mjs.\n  ;\n\n  _proto.getFetchOptions = function getFetchOptions(operation, fetchOptionsOverrides) {\n    if (fetchOptionsOverrides === void 0) {\n      fetchOptionsOverrides = {};\n    }\n\n    var fetchOptions = _objectSpread2({\n      method: 'POST',\n      headers: _objectSpread2({}, this.headers)\n    }, this.fetchOptions, {}, fetchOptionsOverrides);\n\n    if (fetchOptions.method === 'GET') {\n      return fetchOptions;\n    }\n\n    var _extractFiles = extractFiles(operation, '', isExtractableFileEnhanced),\n        clone = _extractFiles.clone,\n        files = _extractFiles.files;\n\n    var operationJSON = JSON.stringify(clone);\n\n    if (files.size) {\n      // See the GraphQL multipart request spec:\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\n      if (!this.FormData) {\n        throw new Error('GraphQLClient: FormData must be polyfilled or passed in new GraphQLClient({ FormData })');\n      }\n\n      var form = new this.FormData();\n      form.append('operations', operationJSON);\n      var map = {};\n      var i = 0;\n      files.forEach(function (paths) {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n      i = 0;\n      files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file, file.name);\n      });\n      fetchOptions.body = form;\n    } else {\n      fetchOptions.headers['Content-Type'] = 'application/json';\n      fetchOptions.body = operationJSON;\n    }\n\n    return fetchOptions;\n  };\n\n  _proto.request = function request(operation, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var url = this.url;\n    var fetchOptions = this.getFetchOptions(operation, options.fetchOptionsOverrides);\n\n    if (fetchOptions.method === 'GET') {\n      var paramsQueryString = Object.entries(operation).filter(function (_ref3) {\n        var v = _ref3[1];\n        return !!v;\n      }).map(function (_ref4) {\n        var k = _ref4[0],\n            v = _ref4[1];\n\n        if (k === 'variables') {\n          v = JSON.stringify(v);\n        }\n\n        return k + \"=\" + encodeURIComponent(v);\n      }).join('&');\n      url = url + '?' + paramsQueryString;\n    }\n\n    return this.fetch(url, this.getFetchOptions(operation, options.fetchOptionsOverrides)).then(function (response) {\n      if (!response.ok) {\n        return response.text().then(function (body) {\n          var status = response.status,\n              statusText = response.statusText;\n          return _this.generateResult({\n            httpError: {\n              status: status,\n              statusText: statusText,\n              body: body\n            }\n          });\n        });\n      } else {\n        return response.json().then(function (_ref5) {\n          var errors = _ref5.errors,\n              data = _ref5.data;\n          return _this.generateResult({\n            graphQLErrors: errors,\n            data: data\n          });\n        });\n      }\n    }).catch(function (error) {\n      return _this.generateResult({\n        fetchError: error\n      });\n    }).then(function (result) {\n      if (result.error) {\n        if (_this.logErrors) {\n          _this.logErrorResult({\n            result: result,\n            operation: operation\n          });\n        }\n\n        if (_this.onError) {\n          _this.onError({\n            result: result,\n            operation: operation\n          });\n        }\n      }\n\n      return result;\n    });\n  };\n\n  _proto.createSubscription = function createSubscription(operation) {\n    if (!this.subscriptionClient) {\n      throw new Error('No SubscriptionClient! Please set in the constructor.');\n    }\n\n    return this.subscriptionClient.request(operation);\n  };\n\n  return GraphQLClient;\n}();\n\nvar actionTypes = {\n  RESET_STATE: 'RESET_STATE',\n  LOADING: 'LOADING',\n  CACHE_HIT: 'CACHE_HIT',\n  REQUEST_RESULT: 'REQUEST_RESULT'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return action.initialState;\n\n    case actionTypes.LOADING:\n      // if the previous action resulted in an error - refetch should clear any errors\n      if (state.error) {\n        return _objectSpread2({}, action.initialState, {\n          data: state.data,\n          loading: true\n        });\n      }\n\n      if (state.loading) {\n        return state; // saves a render cycle as state is the same\n      }\n\n      return _objectSpread2({}, state, {\n        loading: true\n      });\n\n    case actionTypes.CACHE_HIT:\n      if (state.cacheHit && !action.resetState) {\n        // we can be sure this is the same cacheKey hit\n        // because we dispatch RESET_STATE if it changes\n        return state;\n      }\n\n      return _objectSpread2({}, action.result, {\n        cacheHit: true,\n        loading: false\n      });\n\n    case actionTypes.REQUEST_RESULT:\n      return _objectSpread2({}, action.result, {\n        data: state.data && action.result.data && action.updateData ? action.updateData(state.data, action.result.data) : action.result.data,\n        cacheHit: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction useDeepCompareCallback(callback, deps) {\n  var ref = React.useRef();\n\n  if (!deepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  return React.useCallback(callback, ref.current);\n}\n/*\n  options include:\n\n  opts.variables: Object\n  opts.operationName: String\n  opts.fetchOptionsOverrides: Object\n  opts.skipCache: Boolean\n*/\n\n\nfunction useClientRequest(query, initialOpts) {\n  if (initialOpts === void 0) {\n    initialOpts = {};\n  }\n\n  if (typeof query !== 'string') {\n    throw new Error('Your query must be a string. If you are using the `gql` template literal from graphql-tag, remove it from your query.');\n  }\n\n  var contextClient = React.useContext(ClientContext);\n  var client = initialOpts.client || contextClient;\n  var isMounted = React.useRef(true);\n  var activeCacheKey = React.useRef(null);\n  var operation = {\n    query: query,\n    variables: initialOpts.variables,\n    operationName: initialOpts.operationName\n  };\n\n  if (client.useGETForQueries && !initialOpts.isMutation) {\n    initialOpts.fetchOptionsOverrides = _objectSpread2({}, initialOpts.fetchOptionsOverrides, {\n      method: 'GET'\n    });\n  }\n\n  var cacheKey = client.getCacheKey(operation, initialOpts);\n  var isDeferred = initialOpts.isMutation || initialOpts.isManual;\n  var initialCacheHit = initialOpts.skipCache || !client.cache ? null : client.cache.get(cacheKey);\n\n  var initialState = _objectSpread2({}, initialCacheHit, {\n    cacheHit: !!initialCacheHit,\n    loading: isDeferred ? false : !initialCacheHit\n  });\n\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1]; // NOTE: state from useReducer is only initialState on the first render\n  // in subsequent renders the operation could have changed\n  // if so the state would be invalid, this effect ensures we reset it back\n\n\n  var stringifiedCacheKey = JSON.stringify(cacheKey);\n  React.useEffect(function () {\n    if (!initialOpts.updateData) {\n      // if using updateData we can assume that the consumer cares about the previous data\n      dispatch({\n        type: actionTypes.RESET_STATE,\n        initialState: initialState\n      });\n    }\n  }, [stringifiedCacheKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []); // arguments to fetchData override the useClientRequest arguments\n\n  var fetchData = useDeepCompareCallback(function (newOpts) {\n    if (!isMounted.current) return Promise.resolve();\n\n    var revisedOpts = _objectSpread2({}, initialOpts, {}, newOpts);\n\n    var revisedOperation = _objectSpread2({}, operation, {\n      variables: revisedOpts.variables,\n      operationName: revisedOpts.operationName\n    });\n\n    var revisedCacheKey = client.getCacheKey(revisedOperation, revisedOpts); // NOTE: There is a possibility of a race condition whereby\n    // the second query could finish before the first one, dispatching an old result\n    // see https://github.com/nearform/graphql-hooks/issues/150\n\n    activeCacheKey.current = revisedCacheKey;\n    var cacheHit = revisedOpts.skipCache ? null : client.getCache(revisedCacheKey);\n\n    if (cacheHit) {\n      dispatch({\n        type: actionTypes.CACHE_HIT,\n        result: cacheHit,\n        resetState: stringifiedCacheKey !== JSON.stringify(state.cacheKey)\n      });\n      return Promise.resolve(cacheHit);\n    }\n\n    dispatch({\n      type: actionTypes.LOADING,\n      initialState: initialState\n    });\n    return client.request(revisedOperation, revisedOpts).then(function (result) {\n      if (revisedOpts.updateData && typeof revisedOpts.updateData !== 'function') {\n        throw new Error('options.updateData must be a function');\n      }\n\n      var actionResult = _objectSpread2({}, result);\n\n      if (revisedOpts.useCache) {\n        actionResult.useCache = true;\n        actionResult.cacheKey = revisedCacheKey;\n\n        if (client.ssrMode) {\n          var cacheValue = {\n            data: revisedOpts.updateData ? revisedOpts.updateData(state.data, actionResult.data) : actionResult.data\n          };\n          client.saveCache(revisedCacheKey, cacheValue);\n        }\n      }\n\n      if (isMounted.current && revisedCacheKey === activeCacheKey.current) {\n        dispatch({\n          type: actionTypes.REQUEST_RESULT,\n          updateData: revisedOpts.updateData,\n          result: actionResult\n        });\n      }\n\n      return result;\n    });\n  }, [client, initialOpts, operation]); // We perform caching after reducer update\n  // To include the outcome of updateData\n\n  React.useEffect(function () {\n    if (state.useCache) {\n      client.saveCache(state.cacheKey, state);\n    }\n  }, [client, state]);\n  return [fetchData, state];\n}\n\nvar defaultOpts = {\n  useCache: true\n};\n\nfunction useQuery(query, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var allOpts = _objectSpread2({}, defaultOpts, {}, opts);\n\n  var contextClient = React.useContext(ClientContext);\n  var client = opts.client || contextClient;\n\n  var _React$useState = React.useState(false),\n      calledDuringSSR = _React$useState[0],\n      setCalledDuringSSR = _React$useState[1];\n\n  var _useClientRequest = useClientRequest(query, allOpts),\n      queryReq = _useClientRequest[0],\n      state = _useClientRequest[1];\n\n  if (client.ssrMode && opts.ssr !== false && !calledDuringSSR && !opts.skipCache) {\n    // result may already be in the cache from previous SSR iterations\n    if (!state.data && !state.error) {\n      var p = queryReq();\n      client.ssrPromises.push(p);\n    }\n\n    setCalledDuringSSR(true);\n  }\n\n  var stringifiedAllOpts = JSON.stringify(allOpts);\n  React.useEffect(function () {\n    queryReq();\n  }, [query, stringifiedAllOpts]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return _objectSpread2({}, state, {\n    refetch: React.useCallback(function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return queryReq(_objectSpread2({\n        skipCache: true,\n        // don't call the updateData that has been passed into useQuery here\n        // reset to the default behaviour of returning the raw query result\n        // this can be overridden in refetch options\n        updateData: function updateData(_, data) {\n          return data;\n        }\n      }, options));\n    }, [queryReq])\n  });\n}\n\nfunction useSubscription(options, callback) {\n  var callbackRef = useRef(callback);\n  callbackRef.current = callback;\n  var contextClient = useContext(ClientContext);\n  var client = options.client || contextClient;\n  var request = {\n    query: options.query,\n    variables: options.variables\n  };\n  useEffect(function () {\n    var observable = client.createSubscription(request);\n    var subscription = observable.subscribe({\n      next: function next(result) {\n        callbackRef.current(result);\n      },\n      error: function error() {\n        subscription.unsubscribe();\n      },\n      complete: function complete() {\n        subscription.unsubscribe();\n      }\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, []); // eslint-disable-line\n  // the effect should be run when component is mounted and unmounted\n}\n\nvar useManualQuery = function useManualQuery(query, options) {\n  return useClientRequest(query, _objectSpread2({\n    useCache: true,\n    isManual: true\n  }, options));\n};\n\nvar useMutation = function useMutation(query, options) {\n  return useClientRequest(query, _objectSpread2({\n    isMutation: true\n  }, options));\n};\n\nexport { ClientContext, GraphQLClient, useClientRequest, useManualQuery, useMutation, useQuery, useSubscription };","map":{"version":3,"sources":["/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/node_modules/graphql-hooks/es/graphql-hooks.js"],"names":["React","useRef","useContext","useEffect","isExtractableFile","extractFiles","deepEqual","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","ClientContext","createContext","displayName","isExtractableFileEnhanced","pipe","GraphQLClient","config","url","Error","fetch","ssrMode","cache","headers","ssrPromises","bind","fetchOptions","FormData","undefined","logErrors","onError","useGETForQueries","subscriptionClient","_proto","prototype","setHeader","setHeaders","removeHeader","logErrorResult","_ref","result","operation","console","error","groupCollapsed","log","groupEnd","fetchError","httpError","graphQLErrors","err","generateResult","_ref2","data","errorFound","getCacheKey","options","fetchOptionsOverrides","getCache","cacheKey","cacheHit","get","saveCache","set","getFetchOptions","method","_extractFiles","clone","files","operationJSON","JSON","stringify","size","form","append","map","paths","file","name","body","request","_this","paramsQueryString","entries","_ref3","v","_ref4","k","encodeURIComponent","join","then","response","ok","text","status","statusText","json","_ref5","errors","catch","createSubscription","actionTypes","RESET_STATE","LOADING","CACHE_HIT","REQUEST_RESULT","reducer","state","action","type","initialState","loading","resetState","updateData","useDeepCompareCallback","callback","deps","ref","current","useCallback","useClientRequest","query","initialOpts","contextClient","client","isMounted","activeCacheKey","variables","operationName","isMutation","isDeferred","isManual","initialCacheHit","skipCache","_React$useReducer","useReducer","dispatch","stringifiedCacheKey","fetchData","newOpts","Promise","resolve","revisedOpts","revisedOperation","revisedCacheKey","actionResult","useCache","cacheValue","defaultOpts","useQuery","opts","allOpts","_React$useState","useState","calledDuringSSR","setCalledDuringSSR","_useClientRequest","queryReq","ssr","p","stringifiedAllOpts","refetch","_","useSubscription","callbackRef","observable","subscription","subscribe","next","unsubscribe","complete","useManualQuery","useMutation"],"mappings":"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","sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport { isExtractableFile, extractFiles } from 'extract-files';\nimport deepEqual from 'dequal';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ClientContext = React.createContext();\nClientContext.displayName = 'ClientContext';\n\nvar isExtractableFileEnhanced = function isExtractableFileEnhanced(value) {\n  return isExtractableFile(value) || // Check if stream\n  // https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n  value !== null && typeof value === 'object' && typeof value.pipe === 'function';\n};\n\nvar GraphQLClient = /*#__PURE__*/function () {\n  function GraphQLClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    // validate config\n    if (!config.url) {\n      throw new Error('GraphQLClient: config.url is required');\n    }\n\n    if (config.fetch && typeof config.fetch !== 'function') {\n      throw new Error('GraphQLClient: config.fetch must be a function');\n    }\n\n    if (!config.fetch && !fetch) {\n      throw new Error('GraphQLClient: fetch must be polyfilled or passed in new GraphQLClient({ fetch })');\n    }\n\n    if (config.ssrMode && !config.cache) {\n      throw new Error('GraphQLClient: config.cache is required when in ssrMode');\n    }\n\n    this.cache = config.cache;\n    this.headers = config.headers || {};\n    this.ssrMode = config.ssrMode;\n    this.ssrPromises = [];\n    this.url = config.url;\n    this.fetch = config.fetch || fetch.bind();\n    this.fetchOptions = config.fetchOptions || {};\n    this.FormData = config.FormData || (typeof FormData !== 'undefined' ? FormData : undefined);\n    this.logErrors = config.logErrors !== undefined ? config.logErrors : true;\n    this.onError = config.onError;\n    this.useGETForQueries = config.useGETForQueries === true;\n    this.subscriptionClient = config.subscriptionClient;\n  }\n\n  var _proto = GraphQLClient.prototype;\n\n  _proto.setHeader = function setHeader(key, value) {\n    this.headers[key] = value;\n    return this;\n  };\n\n  _proto.setHeaders = function setHeaders(headers) {\n    this.headers = headers;\n    return this;\n  };\n\n  _proto.removeHeader = function removeHeader(key) {\n    delete this.headers[key];\n    return this;\n  }\n  /* eslint-disable no-console */\n  ;\n\n  _proto.logErrorResult = function logErrorResult(_ref) {\n    var result = _ref.result,\n        operation = _ref.operation;\n    console.error('GraphQL Hooks Error');\n    console.groupCollapsed('---> Full Error Details');\n    console.groupCollapsed('Operation:');\n    console.log(operation);\n    console.groupEnd();\n    var error = result.error;\n\n    if (error) {\n      if (error.fetchError) {\n        console.groupCollapsed('FETCH ERROR:');\n        console.log(error.fetchError);\n        console.groupEnd();\n      }\n\n      if (error.httpError) {\n        console.groupCollapsed('HTTP ERROR:');\n        console.log(error.httpError);\n        console.groupEnd();\n      }\n\n      if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n        console.groupCollapsed('GRAPHQL ERROR:');\n        error.graphQLErrors.forEach(function (err) {\n          return console.log(err);\n        });\n        console.groupEnd();\n      }\n    }\n\n    console.groupEnd();\n  }\n  /* eslint-enable no-console */\n  ;\n\n  _proto.generateResult = function generateResult(_ref2) {\n    var fetchError = _ref2.fetchError,\n        httpError = _ref2.httpError,\n        graphQLErrors = _ref2.graphQLErrors,\n        data = _ref2.data;\n    var errorFound = !!(graphQLErrors && graphQLErrors.length > 0 || fetchError || httpError);\n    return !errorFound ? {\n      data: data\n    } : {\n      data: data,\n      error: {\n        fetchError: fetchError,\n        httpError: httpError,\n        graphQLErrors: graphQLErrors\n      }\n    };\n  };\n\n  _proto.getCacheKey = function getCacheKey(operation, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var fetchOptions = _objectSpread2({}, this.fetchOptions, {}, options.fetchOptionsOverrides);\n\n    return {\n      operation: operation,\n      fetchOptions: fetchOptions\n    };\n  };\n\n  _proto.getCache = function getCache(cacheKey) {\n    var cacheHit = this.cache ? this.cache.get(cacheKey) : null;\n\n    if (cacheHit) {\n      return cacheHit;\n    }\n  };\n\n  _proto.saveCache = function saveCache(cacheKey, value) {\n    if (this.cache) {\n      this.cache.set(cacheKey, value);\n    }\n  } // Kudos to Jayden Seric (@jaydenseric) for this piece of code.\n  // See original source: https://github.com/jaydenseric/graphql-react/blob/82d576b5fe6664c4a01cd928d79f33ddc3f7bbfd/src/universal/graphqlFetchOptions.mjs.\n  ;\n\n  _proto.getFetchOptions = function getFetchOptions(operation, fetchOptionsOverrides) {\n    if (fetchOptionsOverrides === void 0) {\n      fetchOptionsOverrides = {};\n    }\n\n    var fetchOptions = _objectSpread2({\n      method: 'POST',\n      headers: _objectSpread2({}, this.headers)\n    }, this.fetchOptions, {}, fetchOptionsOverrides);\n\n    if (fetchOptions.method === 'GET') {\n      return fetchOptions;\n    }\n\n    var _extractFiles = extractFiles(operation, '', isExtractableFileEnhanced),\n        clone = _extractFiles.clone,\n        files = _extractFiles.files;\n\n    var operationJSON = JSON.stringify(clone);\n\n    if (files.size) {\n      // See the GraphQL multipart request spec:\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\n      if (!this.FormData) {\n        throw new Error('GraphQLClient: FormData must be polyfilled or passed in new GraphQLClient({ FormData })');\n      }\n\n      var form = new this.FormData();\n      form.append('operations', operationJSON);\n      var map = {};\n      var i = 0;\n      files.forEach(function (paths) {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n      i = 0;\n      files.forEach(function (paths, file) {\n        form.append(\"\" + ++i, file, file.name);\n      });\n      fetchOptions.body = form;\n    } else {\n      fetchOptions.headers['Content-Type'] = 'application/json';\n      fetchOptions.body = operationJSON;\n    }\n\n    return fetchOptions;\n  };\n\n  _proto.request = function request(operation, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var url = this.url;\n    var fetchOptions = this.getFetchOptions(operation, options.fetchOptionsOverrides);\n\n    if (fetchOptions.method === 'GET') {\n      var paramsQueryString = Object.entries(operation).filter(function (_ref3) {\n        var v = _ref3[1];\n        return !!v;\n      }).map(function (_ref4) {\n        var k = _ref4[0],\n            v = _ref4[1];\n\n        if (k === 'variables') {\n          v = JSON.stringify(v);\n        }\n\n        return k + \"=\" + encodeURIComponent(v);\n      }).join('&');\n      url = url + '?' + paramsQueryString;\n    }\n\n    return this.fetch(url, this.getFetchOptions(operation, options.fetchOptionsOverrides)).then(function (response) {\n      if (!response.ok) {\n        return response.text().then(function (body) {\n          var status = response.status,\n              statusText = response.statusText;\n          return _this.generateResult({\n            httpError: {\n              status: status,\n              statusText: statusText,\n              body: body\n            }\n          });\n        });\n      } else {\n        return response.json().then(function (_ref5) {\n          var errors = _ref5.errors,\n              data = _ref5.data;\n          return _this.generateResult({\n            graphQLErrors: errors,\n            data: data\n          });\n        });\n      }\n    }).catch(function (error) {\n      return _this.generateResult({\n        fetchError: error\n      });\n    }).then(function (result) {\n      if (result.error) {\n        if (_this.logErrors) {\n          _this.logErrorResult({\n            result: result,\n            operation: operation\n          });\n        }\n\n        if (_this.onError) {\n          _this.onError({\n            result: result,\n            operation: operation\n          });\n        }\n      }\n\n      return result;\n    });\n  };\n\n  _proto.createSubscription = function createSubscription(operation) {\n    if (!this.subscriptionClient) {\n      throw new Error('No SubscriptionClient! Please set in the constructor.');\n    }\n\n    return this.subscriptionClient.request(operation);\n  };\n\n  return GraphQLClient;\n}();\n\nvar actionTypes = {\n  RESET_STATE: 'RESET_STATE',\n  LOADING: 'LOADING',\n  CACHE_HIT: 'CACHE_HIT',\n  REQUEST_RESULT: 'REQUEST_RESULT'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return action.initialState;\n\n    case actionTypes.LOADING:\n      // if the previous action resulted in an error - refetch should clear any errors\n      if (state.error) {\n        return _objectSpread2({}, action.initialState, {\n          data: state.data,\n          loading: true\n        });\n      }\n\n      if (state.loading) {\n        return state; // saves a render cycle as state is the same\n      }\n\n      return _objectSpread2({}, state, {\n        loading: true\n      });\n\n    case actionTypes.CACHE_HIT:\n      if (state.cacheHit && !action.resetState) {\n        // we can be sure this is the same cacheKey hit\n        // because we dispatch RESET_STATE if it changes\n        return state;\n      }\n\n      return _objectSpread2({}, action.result, {\n        cacheHit: true,\n        loading: false\n      });\n\n    case actionTypes.REQUEST_RESULT:\n      return _objectSpread2({}, action.result, {\n        data: state.data && action.result.data && action.updateData ? action.updateData(state.data, action.result.data) : action.result.data,\n        cacheHit: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction useDeepCompareCallback(callback, deps) {\n  var ref = React.useRef();\n\n  if (!deepEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  return React.useCallback(callback, ref.current);\n}\n/*\n  options include:\n\n  opts.variables: Object\n  opts.operationName: String\n  opts.fetchOptionsOverrides: Object\n  opts.skipCache: Boolean\n*/\n\n\nfunction useClientRequest(query, initialOpts) {\n  if (initialOpts === void 0) {\n    initialOpts = {};\n  }\n\n  if (typeof query !== 'string') {\n    throw new Error('Your query must be a string. If you are using the `gql` template literal from graphql-tag, remove it from your query.');\n  }\n\n  var contextClient = React.useContext(ClientContext);\n  var client = initialOpts.client || contextClient;\n  var isMounted = React.useRef(true);\n  var activeCacheKey = React.useRef(null);\n  var operation = {\n    query: query,\n    variables: initialOpts.variables,\n    operationName: initialOpts.operationName\n  };\n\n  if (client.useGETForQueries && !initialOpts.isMutation) {\n    initialOpts.fetchOptionsOverrides = _objectSpread2({}, initialOpts.fetchOptionsOverrides, {\n      method: 'GET'\n    });\n  }\n\n  var cacheKey = client.getCacheKey(operation, initialOpts);\n  var isDeferred = initialOpts.isMutation || initialOpts.isManual;\n  var initialCacheHit = initialOpts.skipCache || !client.cache ? null : client.cache.get(cacheKey);\n\n  var initialState = _objectSpread2({}, initialCacheHit, {\n    cacheHit: !!initialCacheHit,\n    loading: isDeferred ? false : !initialCacheHit\n  });\n\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      state = _React$useReducer[0],\n      dispatch = _React$useReducer[1]; // NOTE: state from useReducer is only initialState on the first render\n  // in subsequent renders the operation could have changed\n  // if so the state would be invalid, this effect ensures we reset it back\n\n\n  var stringifiedCacheKey = JSON.stringify(cacheKey);\n  React.useEffect(function () {\n    if (!initialOpts.updateData) {\n      // if using updateData we can assume that the consumer cares about the previous data\n      dispatch({\n        type: actionTypes.RESET_STATE,\n        initialState: initialState\n      });\n    }\n  }, [stringifiedCacheKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []); // arguments to fetchData override the useClientRequest arguments\n\n  var fetchData = useDeepCompareCallback(function (newOpts) {\n    if (!isMounted.current) return Promise.resolve();\n\n    var revisedOpts = _objectSpread2({}, initialOpts, {}, newOpts);\n\n    var revisedOperation = _objectSpread2({}, operation, {\n      variables: revisedOpts.variables,\n      operationName: revisedOpts.operationName\n    });\n\n    var revisedCacheKey = client.getCacheKey(revisedOperation, revisedOpts); // NOTE: There is a possibility of a race condition whereby\n    // the second query could finish before the first one, dispatching an old result\n    // see https://github.com/nearform/graphql-hooks/issues/150\n\n    activeCacheKey.current = revisedCacheKey;\n    var cacheHit = revisedOpts.skipCache ? null : client.getCache(revisedCacheKey);\n\n    if (cacheHit) {\n      dispatch({\n        type: actionTypes.CACHE_HIT,\n        result: cacheHit,\n        resetState: stringifiedCacheKey !== JSON.stringify(state.cacheKey)\n      });\n      return Promise.resolve(cacheHit);\n    }\n\n    dispatch({\n      type: actionTypes.LOADING,\n      initialState: initialState\n    });\n    return client.request(revisedOperation, revisedOpts).then(function (result) {\n      if (revisedOpts.updateData && typeof revisedOpts.updateData !== 'function') {\n        throw new Error('options.updateData must be a function');\n      }\n\n      var actionResult = _objectSpread2({}, result);\n\n      if (revisedOpts.useCache) {\n        actionResult.useCache = true;\n        actionResult.cacheKey = revisedCacheKey;\n\n        if (client.ssrMode) {\n          var cacheValue = {\n            data: revisedOpts.updateData ? revisedOpts.updateData(state.data, actionResult.data) : actionResult.data\n          };\n          client.saveCache(revisedCacheKey, cacheValue);\n        }\n      }\n\n      if (isMounted.current && revisedCacheKey === activeCacheKey.current) {\n        dispatch({\n          type: actionTypes.REQUEST_RESULT,\n          updateData: revisedOpts.updateData,\n          result: actionResult\n        });\n      }\n\n      return result;\n    });\n  }, [client, initialOpts, operation]); // We perform caching after reducer update\n  // To include the outcome of updateData\n\n  React.useEffect(function () {\n    if (state.useCache) {\n      client.saveCache(state.cacheKey, state);\n    }\n  }, [client, state]);\n  return [fetchData, state];\n}\n\nvar defaultOpts = {\n  useCache: true\n};\n\nfunction useQuery(query, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var allOpts = _objectSpread2({}, defaultOpts, {}, opts);\n\n  var contextClient = React.useContext(ClientContext);\n  var client = opts.client || contextClient;\n\n  var _React$useState = React.useState(false),\n      calledDuringSSR = _React$useState[0],\n      setCalledDuringSSR = _React$useState[1];\n\n  var _useClientRequest = useClientRequest(query, allOpts),\n      queryReq = _useClientRequest[0],\n      state = _useClientRequest[1];\n\n  if (client.ssrMode && opts.ssr !== false && !calledDuringSSR && !opts.skipCache) {\n    // result may already be in the cache from previous SSR iterations\n    if (!state.data && !state.error) {\n      var p = queryReq();\n      client.ssrPromises.push(p);\n    }\n\n    setCalledDuringSSR(true);\n  }\n\n  var stringifiedAllOpts = JSON.stringify(allOpts);\n  React.useEffect(function () {\n    queryReq();\n  }, [query, stringifiedAllOpts]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return _objectSpread2({}, state, {\n    refetch: React.useCallback(function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return queryReq(_objectSpread2({\n        skipCache: true,\n        // don't call the updateData that has been passed into useQuery here\n        // reset to the default behaviour of returning the raw query result\n        // this can be overridden in refetch options\n        updateData: function updateData(_, data) {\n          return data;\n        }\n      }, options));\n    }, [queryReq])\n  });\n}\n\nfunction useSubscription(options, callback) {\n  var callbackRef = useRef(callback);\n  callbackRef.current = callback;\n  var contextClient = useContext(ClientContext);\n  var client = options.client || contextClient;\n  var request = {\n    query: options.query,\n    variables: options.variables\n  };\n  useEffect(function () {\n    var observable = client.createSubscription(request);\n    var subscription = observable.subscribe({\n      next: function next(result) {\n        callbackRef.current(result);\n      },\n      error: function error() {\n        subscription.unsubscribe();\n      },\n      complete: function complete() {\n        subscription.unsubscribe();\n      }\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, []); // eslint-disable-line\n  // the effect should be run when component is mounted and unmounted\n}\n\nvar useManualQuery = function useManualQuery(query, options) {\n  return useClientRequest(query, _objectSpread2({\n    useCache: true,\n    isManual: true\n  }, options));\n};\n\nvar useMutation = function useMutation(query, options) {\n  return useClientRequest(query, _objectSpread2({\n    isMutation: true\n  }, options));\n};\n\nexport { ClientContext, GraphQLClient, useClientRequest, useManualQuery, useMutation, useQuery, useSubscription };\n"]},"metadata":{},"sourceType":"module"}