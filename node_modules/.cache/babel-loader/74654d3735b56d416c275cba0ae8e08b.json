{"ast":null,"code":"var _jsxFileName = \"/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js\";\nimport React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst DodajOglas = props => {\n  const POST_MUTATION = gql`\n        mutation {\n            addPost(postInfo: {\n            author: $id,\n            post_type: $type,\n            description: $description,\n            address: $address,\n            rent: $rent,\n            num_of_roommates: $roomMates,\n            }) {\n            post_id\n            description\n            address\n            rent\n            num_of_roommates\n            author {\n                user_id\n                username\n                name\n                surname\n                city\n                address\n                email\n                bio\n                gender\n                date_of_birth\n                pr_picture_url\n                pref_roommate_num\n            }\n            post_type {\n                post_type_id\n            }\n            }\n        }\n        `;\n  const Auth = React.useContext(AuthApi);\n  const [address, setAddress] = useState(\"\");\n  const [rent, setRent] = useState(\"\");\n  const [roomMates, setRoomMates] = useState(0);\n  const [description, setDescription] = useState(\"\");\n\n  const handleChangeAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeRent = event => {\n    setRent(event.target.value);\n  };\n\n  const handleChangeRomMates = event => {\n    setRoomMates(event.target.value);\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  const [type, setType] = useState(1);\n  const user = Cookies.get(\"user\");\n  const id = parseInt(user.toString().split('\"')[7]);\n  const token = parseInt(user.toString().split('\"')[3]);\n  /*const handleSubmit = (event) => {\n      event.preventDefault();\n      if(address === \"\") {\n          alert(\"Unesite adresu!\")\n      } else if (roomMates === \"\") {\n          alert(\"Unesite broj cimera!\")\n      } else if (rent === \"\") {\n          alert(\"Unesite cijenu!\")\n      } else if (description === \"\") {\n          alert(\"Unesite opis!\");\n      } else {\n          const requestBody = {\n              query: `\n              mutation {\n                  addPost(postInfo: {\n                  author: ${parseInt(id)},\n                  post_type: ${parseInt(type)},\n                  description: ${description}\",\n                  address: ${address},\n                  rent: ${parseInt(rent)},\n                  num_of_roommates: ${parseInt(roomMates)},\n                  }) {\n                  post_id\n                  description\n                  address\n                  rent\n                  num_of_roommates\n                  author {\n                      user_id\n                      username\n                      name\n                      surname\n                      city\n                      address\n                      email\n                      bio\n                      gender\n                      date_of_birth\n                      pr_picture_url\n                      pref_roommate_num\n                  }\n                  post_type {\n                      post_type_id\n                  }\n                  }\n              }\n              `\n          };\n          \n      }\n  }*/\n\n  return /*#__PURE__*/React.createElement(ToolbarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DodajOglas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Objavi svoj oglas!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Ako \\u017Eelite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Po\\u0161aljite nam poruku\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 28\n    }\n  }, \"Adresa\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeAddress(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 28\n    }\n  }, \"Broj cimera\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRomMates(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 28\n    }\n  }, \"Cijena\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRent(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 28\n    }\n  }, \"Va\\u0161a oglas\"), \" (required)\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"7\",\n    cols: \"50\",\n    onChange: event => {\n      handleChangeDescription(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Mutation, {\n    mutation: POST_MUTATION,\n    variables: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, postMutation => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: postMutation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 42\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default DodajOglas;\n/* Napraviti prvo dodavanje bez tipa oglasa */\n\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n\n/* Napraviti dodavanje kontakta u tabelu */\n\n/* Popraviti warninge */","map":{"version":3,"sources":["/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js"],"names":["React","useState","ToolbarLayout","classes","Footer","AuthApi","Cookies","useHistory","Mutation","gql","DodajOglas","props","POST_MUTATION","Auth","useContext","address","setAddress","rent","setRent","roomMates","setRoomMates","description","setDescription","handleChangeAddress","event","target","value","handleChangeRent","handleChangeRomMates","handleChangeDescription","type","setType","user","get","id","parseInt","toString","split","token","Forma","postMutation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\n\nconst DodajOglas = (props) => {\n\n    const POST_MUTATION = gql`\n        mutation {\n            addPost(postInfo: {\n            author: $id,\n            post_type: $type,\n            description: $description,\n            address: $address,\n            rent: $rent,\n            num_of_roommates: $roomMates,\n            }) {\n            post_id\n            description\n            address\n            rent\n            num_of_roommates\n            author {\n                user_id\n                username\n                name\n                surname\n                city\n                address\n                email\n                bio\n                gender\n                date_of_birth\n                pr_picture_url\n                pref_roommate_num\n            }\n            post_type {\n                post_type_id\n            }\n            }\n        }\n        `\n        \n\n    const Auth = React.useContext(AuthApi);\n\n    const [address, setAddress] = useState(\"\");\n    const [rent, setRent] = useState(\"\");\n    const [roomMates, setRoomMates] = useState(0);\n    const [description, setDescription] = useState(\"\");\n\n    const handleChangeAddress = (event) => {\n        setAddress(event.target.value);\n    }\n\n    const handleChangeRent = (event) => {\n        setRent(event.target.value);\n    }\n    const handleChangeRomMates = (event) => {\n        setRoomMates(event.target.value);\n    }\n    const handleChangeDescription = (event) => {\n        setDescription(event.target.value);\n    }\n\n    const [type, setType] = useState(1);\n    const user = Cookies.get(\"user\");\n    const id = parseInt(user.toString().split('\"')[7]);\n    const token = parseInt(user.toString().split('\"')[3]);\n\n    /*const handleSubmit = (event) => {\n        event.preventDefault();\n        if(address === \"\") {\n            alert(\"Unesite adresu!\")\n        } else if (roomMates === \"\") {\n            alert(\"Unesite broj cimera!\")\n        } else if (rent === \"\") {\n            alert(\"Unesite cijenu!\")\n        } else if (description === \"\") {\n            alert(\"Unesite opis!\");\n        } else {\n            const requestBody = {\n                query: `\n                mutation {\n                    addPost(postInfo: {\n                    author: ${parseInt(id)},\n                    post_type: ${parseInt(type)},\n                    description: ${description}\",\n                    address: ${address},\n                    rent: ${parseInt(rent)},\n                    num_of_roommates: ${parseInt(roomMates)},\n                    }) {\n                    post_id\n                    description\n                    address\n                    rent\n                    num_of_roommates\n                    author {\n                        user_id\n                        username\n                        name\n                        surname\n                        city\n                        address\n                        email\n                        bio\n                        gender\n                        date_of_birth\n                        pr_picture_url\n                        pref_roommate_num\n                    }\n                    post_type {\n                        post_type_id\n                    }\n                    }\n                }\n                `\n            };\n            \n        }\n    }*/\n    return (\n        <ToolbarLayout>\n            <div className={classes.DodajOglas}>\n                \n                <div className={classes.Forma}>\n                    <h1>Objavi svoj oglas!</h1>\n                    <p>Ako želite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.</p>\n                    <h4>Pošaljite nam poruku</h4>\n                    \n                    <label><strong>Adresa</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeAddress(event)}}/>\n                    <label><strong>Broj cimera</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRomMates(event)}}/>\n                    <label><strong>Cijena</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRent(event)}}/>\n                    <label><strong>Vaša oglas</strong> (required)</label>\n                    <textarea rows=\"7\" cols=\"50\" onChange={(event) => {handleChangeDescription(event)}}/>\n                    <Mutation mutation={POST_MUTATION} variables={{  }}>\n                        {postMutation => <button onClick={postMutation}>Submit</button>}\n                    </Mutation>\n                </div>\n                <Footer/>\n            </div>\n\n        </ToolbarLayout>\n    )\n}\n\nexport default DodajOglas;\n\n/* Napraviti prvo dodavanje bez tipa oglasa */\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n/* Napraviti dodavanje kontakta u tabelu */\n/* Popraviti warninge */\n"]},"metadata":{},"sourceType":"module"}