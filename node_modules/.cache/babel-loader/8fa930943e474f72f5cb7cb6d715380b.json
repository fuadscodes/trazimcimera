{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Predmeti\\\\DWS\\\\Vjezbe\\\\trazim-cimera\\\\trazimcimera\\\\src\\\\views\\\\Prijava\\\\Prijava.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./Prijava.css\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Main from '../../components/Main/Main';\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\n\nconst Prijava = props => {\n  const Auth = React.useContext(AuthApi);\n  const [korisnicko_ime, setKorisnicko_ime] = useState(\"\");\n  const [lozinka, setLozinka] = useState(\"\");\n\n  const handleChangeUsername = event => {\n    setKorisnicko_ime(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setLozinka(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const requestBody = {\n      query: `\n                mutation {\n                    login(username: \"${korisnicko_ime}\", password: \"${lozinka}\") {\n                        token\n                        id\n                        username\n                    }\n                }\n            `\n    };\n    fetch('http://localhost:4000/graphql', {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Greška!');\n      }\n\n      return res.json();\n    }).then(resData => {\n      if (resData.data.login !== null) {\n        setTimeout(function () {\n          Auth.setAuth(true);\n        }, 1);\n        Cookies.set(\"user\", {\n          token: resData.data.login.token,\n          id: resData.data.login.id,\n          username: resData.data.login.username\n        });\n      } else {\n        alert(\"Pogrešno korisničko ime ili lozinka!\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Prijava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Prijavi se\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 36\n    }\n  }, \"Korisni\\u010Dko ime\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"korisnicko_ime\",\n    value: korisnicko_ime,\n    onChange: handleChangeUsername,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 36\n    }\n  }, \"Lozinka\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    value: lozinka,\n    name: \"lozinka\",\n    onChange: handleChangePassword,\n    required: true,\n    minLength: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: event => {\n      handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 78\n    }\n  }, \"PRIJAVA\"))))));\n};\n\nexport default Prijava;","map":{"version":3,"sources":["C:/Personal/Predmeti/DWS/Vjezbe/trazim-cimera/trazimcimera/src/views/Prijava/Prijava.js"],"names":["React","useState","classes","Layout","Main","AuthApi","Cookies","Prijava","props","Auth","useContext","korisnicko_ime","setKorisnicko_ime","lozinka","setLozinka","handleChangeUsername","event","target","value","handleChangePassword","handleSubmit","preventDefault","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","setTimeout","setAuth","set","token","id","username","alert","catch","err","console","log","Forma"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport classes from \"./Prijava.css\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Main from '../../components/Main/Main';\r\nimport AuthApi from \"../../auth-api\";\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Prijava = (props) => {\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const [korisnicko_ime, setKorisnicko_ime] = useState(\"\");\r\n    const [lozinka, setLozinka] = useState(\"\");\r\n\r\n    const handleChangeUsername = (event) => {\r\n        setKorisnicko_ime(event.target.value);\r\n    }\r\n\r\n    const handleChangePassword = (event) => {\r\n        setLozinka(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const requestBody = {\r\n            query: `\r\n                mutation {\r\n                    login(username: \"${korisnicko_ime}\", password: \"${lozinka}\") {\r\n                        token\r\n                        id\r\n                        username\r\n                    }\r\n                }\r\n            `\r\n        };\r\n\r\n        fetch('http://localhost:4000/graphql', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            if(res.status !== 200 && res.status !== 201) {\r\n                throw new Error('Greška!');\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            if(resData.data.login !== null) {\r\n                setTimeout(function () {\r\n                    Auth.setAuth(true);\r\n                }, 1);\r\n                Cookies.set(\"user\", {\r\n                    token: resData.data.login.token,\r\n                    id: resData.data.login.id,\r\n                    username: resData.data.login.username\r\n                });\r\n            } else {\r\n                alert(\"Pogrešno korisničko ime ili lozinka!\");\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <Main>\r\n                <div className={classes.Prijava}>\r\n                        <h1>Prijavi se</h1>\r\n                        <div className={classes.Forma}>\r\n                            <label><strong>Korisničko ime</strong> (required)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"korisnicko_ime\"\r\n                                value={korisnicko_ime}\r\n                                onChange={handleChangeUsername}\r\n                                required/>\r\n                            <label><strong>Lozinka</strong> (required)</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={lozinka}\r\n                                name=\"lozinka\"\r\n                                onChange={handleChangePassword}\r\n                                required\r\n                                minLength={3}/>\r\n                            <button onClick={event => {handleSubmit(event)}}><strong>PRIJAVA</strong></button>\r\n                        </div>\r\n                </div>\r\n            </Main>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Prijava;\r\n"]},"metadata":{},"sourceType":"module"}