{"ast":null,"code":"var _jsxFileName = \"/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js\";\nimport React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from 'graphql-hooks';\n\nconst DodajOglas = props => {\n  const Auth = React.useContext(AuthApi);\n  const [address, setAddress] = useState(\"\");\n  const [rent, setRent] = useState(0);\n  const [roomMates, setRoomMates] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const ADD_POST_MUTATION = `\n    mutation {\n        addPost(postInfo: {\n        author: $id,\n        post_type: $type,\n        description: $description,\n        address: $address,\n        rent: $rent,\n        num_of_roommates: $roomMates,\n        }) {\n        post_id\n        description\n        address\n        rent\n        num_of_roommates\n        author {\n            user_id\n            username\n            name\n            surname\n            city\n            address\n            email\n            bio\n            gender\n            date_of_birth\n            pr_picture_url\n            pref_roommate_num\n        }\n        post_type {\n            post_type_id\n            }\n        }\n    }\n    `;\n  const [addPostMutation] = useMutation(ADD_POST_MUTATION);\n  const [type, setType] = useState(1);\n  const user = Cookies.get(\"user\");\n  const id = parseInt(user.toString().split('\"')[7]);\n  const token = user.toString().split('\"')[3];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await addPostMutation({\n      variables: {\n        id,\n        type,\n        description,\n        address,\n        rent,\n        roomMates\n      }\n    });\n\n    if (error) {\n      // your code to handle login error\n      console.log(error);\n    } else {\n      alert(\"Dobar\"); // your code to handle token in browser and login redirection\n    }\n  };\n\n  const handleChangeAddress = event => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeRent = event => {\n    setRent(parseInt(event.target.value));\n  };\n\n  const handleChangeRomMates = event => {\n    setRoomMates(parseInt(event.target.value));\n  };\n\n  const handleChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  console.log(token);\n  return /*#__PURE__*/React.createElement(ToolbarLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.DodajOglas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Forma,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Objavi svoj oglas!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Ako \\u017Eelite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Po\\u0161aljite nam poruku\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 28\n    }\n  }, \"Adresa\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeAddress(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 28\n    }\n  }, \"Broj cimera\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRomMates(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 28\n    }\n  }, \"Cijena\"), \" (required)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      handleChangeRent(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 28\n    }\n  }, \"Va\\u0161a oglas\"), \" (required)\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"7\",\n    cols: \"50\",\n    onChange: event => {\n      handleChangeDescription(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.Button,\n    onClick: event => {\n      handleSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"OBJAVI\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default DodajOglas;\n/* Napraviti prvo dodavanje bez tipa oglasa */\n\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n\n/* Napraviti dodavanje kontakta u tabelu */\n\n/* Popraviti warninge */","map":{"version":3,"sources":["/home/rootpc/Desktop/Cimeri/Front/trazimcimera-master/src/views/DodajOglas/DodajOglas.js"],"names":["React","useState","ToolbarLayout","classes","Footer","AuthApi","Cookies","useHistory","useMutation","DodajOglas","props","Auth","useContext","address","setAddress","rent","setRent","roomMates","setRoomMates","description","setDescription","ADD_POST_MUTATION","addPostMutation","type","setType","user","get","id","parseInt","toString","split","token","handleSubmit","e","preventDefault","data","error","variables","console","log","alert","handleChangeAddress","event","target","value","handleChangeRent","handleChangeRomMates","handleChangeDescription","Forma","Button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ToolbarLayout from \"../../components/ToolbarLayout/ToolbarLayout\";\nimport classes from './DodajOglas.css';\nimport Footer from \"../../components/Footer/Footer\";\nimport AuthApi from \"../../auth-api\";\nimport Cookies from 'js-cookie';\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from 'graphql-hooks';\n\nconst DodajOglas = (props) => {\n\n    const Auth = React.useContext(AuthApi);\n\n    const [address, setAddress] = useState(\"\");\n    const [rent, setRent] = useState(0);\n    const [roomMates, setRoomMates] = useState(0);\n    const [description, setDescription] = useState(\"\");\n\n    const ADD_POST_MUTATION = `\n    mutation {\n        addPost(postInfo: {\n        author: $id,\n        post_type: $type,\n        description: $description,\n        address: $address,\n        rent: $rent,\n        num_of_roommates: $roomMates,\n        }) {\n        post_id\n        description\n        address\n        rent\n        num_of_roommates\n        author {\n            user_id\n            username\n            name\n            surname\n            city\n            address\n            email\n            bio\n            gender\n            date_of_birth\n            pr_picture_url\n            pref_roommate_num\n        }\n        post_type {\n            post_type_id\n            }\n        }\n    }\n    `;\n\n    const [addPostMutation] = useMutation(ADD_POST_MUTATION)\n\n    const [type, setType] = useState(1);\n    const user = Cookies.get(\"user\");\n    const id = parseInt(user.toString().split('\"')[7]);\n    const token = user.toString().split('\"')[3];\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        const { data, error } = await addPostMutation({\n          variables: { id, type, description, address, rent, roomMates }\n        })\n        if (error) {\n          // your code to handle login error\n          console.log(error)\n        } else {\n            alert(\"Dobar\");\n            \n          // your code to handle token in browser and login redirection\n        }\n      }\n\n    const handleChangeAddress = (event) => {\n        setAddress(event.target.value);\n    }\n\n    const handleChangeRent = (event) => {\n        setRent(parseInt(event.target.value));\n    }\n    const handleChangeRomMates = (event) => {\n        setRoomMates(parseInt(event.target.value));\n    }\n    const handleChangeDescription = (event) => {\n        setDescription(event.target.value);\n    }\n\n\n\n    console.log(token);\n\n\n    \n    return (\n        <ToolbarLayout>\n            <div className={classes.DodajOglas}>\n                \n                <div className={classes.Forma}>\n                    <h1>Objavi svoj oglas!</h1>\n                    <p>Ako želite da objavite svoj oglas i ponudu za cimere, molim Vas ispunite obrazac ispod.</p>\n                    <h4>Pošaljite nam poruku</h4>\n                    \n                    <label><strong>Adresa</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeAddress(event)}}/>\n                    <label><strong>Broj cimera</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRomMates(event)}}/>\n                    <label><strong>Cijena</strong> (required)</label>\n                    <input type=\"text\" onChange={(event) => {handleChangeRent(event)}}/>\n                    <label><strong>Vaša oglas</strong> (required)</label>\n                    <textarea rows=\"7\" cols=\"50\" onChange={(event) => {handleChangeDescription(event)}}/>\n                    <button className={classes.Button} onClick={event => {handleSubmit(event)}}>OBJAVI</button>\n                </div>\n                <Footer/>\n            </div>\n\n        </ToolbarLayout>\n    )\n}\n\nexport default DodajOglas;\n\n/* Napraviti prvo dodavanje bez tipa oglasa */\n/* Napraviti i checkbox za tip oglasa postTypePostTypeId */\n/* Napraviti dodavanje oglasa i radio buttone u formi */\n/* Napraviti dodavanje kontakta u tabelu */\n/* Popraviti warninge */\n"]},"metadata":{},"sourceType":"module"}